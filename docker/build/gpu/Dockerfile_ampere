# Dockerize Stanford University's Vistalab's versio of pbrt-v4 for running on GPUs.
#
# We recommend using the recent releases of Ubuntu, CUDA, and OptiX when possible
# 
#
# We start with the nvidia cuda docker container from https://hub.docker.com/r/nvidia/cuda/tags
#
# 12.4 is known to work. versions as early as 11.6 might also
#
FROM nvidia/cuda:12.4.1-devel-ubuntu22.04

MAINTAINER Zhenyi Liu <zhenyiliu@stanford.edu>
MAINTAINER David Cardinal <david.cardinal@stanford.edu>

ENV DEBIAN_FRONTEND=noninteractive

# Install a higher version of cmake
RUN apt-get update -yq && \
apt-get install -yq software-properties-common && \
add-apt-repository ppa:graphics-drivers && \
add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
apt-get update

# add debugging tools
RUN apt-get install -y bash cmake vim iputils-ping

RUN apt-get update -yq && apt-get install -yq --no-install-recommends \
	libgl1-mesa-dev \
    build-essential \
	gcc-9 \
	g++-9 \
	make \
	bison \
	flex \
	libpthread-stubs0-dev \
	zlib1g-dev \
	libgsl-dev \
	libssl-dev \
	doxygen \
	wget \
	ninja-build \
    apt-utils \
    ca-certificates \
    curl \
    libxinerama-dev \
    libxcursor-dev \
    libxi-dev \
    libxrandr-dev && \
 rm -rf /var/lib/apt/lists/*


# Setup folder structure
RUN mkdir /pbrt
WORKDIR /pbrt/

# get optiX

COPY NVIDIA-OptiX-SDK-8.0.0-linux64-x86_64 /pbrt/NVIDIA-OptiX-SDK-8.0.0-linux64-x86_64

# Pull the git repos for Stanford SCIEN version of pbrt-v4 and modified assimp, and build
RUN apt-get update -yq && apt-get install -y git \
&& git clone -b master --recursive https://github.com/scienstanford/pbrt-v4.git \
&& git clone https://github.com/Zhenyi-Liu/assimp.git \
&& cd assimp \
&& mkdir build \
&& cd build \
&& cmake .. \
&& make -j18 \
&& make install

# Now we can copy them in since they are in our local folder thanks to the build shell file
COPY libnvidia-rtcore.so.1 /usr/lib/x86_64-linux-gnu/libnvidia-rtcore.so.1
COPY libnvoptix.so.1 /usr/lib/x86_64-linux-gnu/libnvoptix.so.1
COPY libcuda.so.1 /usr/lib/x86_64-linux-gnu/libcuda.so.1

WORKDIR /pbrt/pbrt-v4/build 
RUN cmake -DPBRT_GPU_SHADER_MODEL=sm_80 -DCMAKE_BUILD_TYPE=MINSIZEREL -DPBRT_OPTIX7_PATH=/pbrt/NVIDIA-OptiX-SDK-8.0.0-linux64-x86_64/ .. && make -j24

ENV PATH $PATH:/pbrt/pbrt-v4/build

